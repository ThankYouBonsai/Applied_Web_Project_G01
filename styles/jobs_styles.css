/*
filename: jobs_styles.css
author: Kiahok Ung
created: 9/10/2025
last modified: 9/12/2025
description: style sheets for jobs.html
*/

/* Jobs Page */

.jobs_container {
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.jobs_selection {
  width: 75%;
  flex-direction: column;
  align-items: center;
}

.jobs {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0.8em;
  padding: 1em;
  height: 13em;
  border: 0.2em;
  border-style: solid;
  border-radius: 10px;
  border-color: rgb(201, 38, 74);
}

.jobs .job_desc {
  display: none;
}

.jobs .job_title {
  display: block;
}

.jobs:hover {
  cursor: pointer;
  border: solid black;

  .job_title {
    display: none;
  }

  .job_desc {
    display: block;
  }
}

#apply_link {
  text-decoration: none;
  color: black;
}

/* Hamburger menu from this tut: https://youtu.be/dAIVbLrAb_U */ 

/* CSS Variable */
:root {
  --bar_width: 60px;
  --bar_height: 8px;
  --hamburger_gap: 6px;
  --foreground:  black;
  --background: white;
  --hamburger_margin: 8px;
  --animation_timing: 200ms ease-in-out;
  --hamburger_height: calc(var(--bar_height) * 3 
  + var(--hamburger_gap) * 2);
}

.hamburger_menu {
  --x_width: calc(var(--hamburger_height) * 1.41421356237);

  display: flex;
  flex-direction: column;
  gap: var(--hamburger_gap);
  width: max-content;
  position: absolute;
  top: var(--hamburger_margin);
  left: var(--hamburger_margin);
  z-index: 2;
  cursor: pointer;
}

.hamburger_menu input {
  appearance: none;
  padding: 0;
  margin: 0;
  outline: none;
  pointer-events: none;
}

.hamburger_menu::before, .hamburger_menu::after, .hamburger_menu input {
  content: "";
  width: var(--bar_width);
  height: var(--bar_height);
  background-color: var(--foreground);
  border-radius: 900px;
  transform-origin: left center;
  transition: opacity var(--animation_timing), width var(--animation_timing),
  rotate var(--animation_timing), translate var(--animation_timing),
  background-color var(--animation_timing);
}

.hamburger_menu:has(input:checked)::before {
  rotate: 45deg;
  width: var(--x_width);
  translate: 0 calc(var(--bar_height) / -2);
}
.hamburger_menu:has(input:checked)::after {
  rotate: -45deg;
  width: var(--x_width);
  translate: 0 calc(var(--bar_height) / 2);
}

.hamburger_menu input:checked {
  opacity: 0;
  width: 0;
} 